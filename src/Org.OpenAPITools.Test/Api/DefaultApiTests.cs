/* 
 * Classify
 *
 * Classify Custom Image Recognition Service
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@inoven.ai
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing DefaultApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class DefaultApiTests
    {
        private DefaultApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DefaultApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DefaultApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' DefaultApi
            //Assert.IsInstanceOf(typeof(DefaultApi), instance);
        }

        
        /// <summary>
        /// Test CreateNewModel
        /// </summary>
        [Test]
        public void CreateNewModelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string modelName = null;
            //instance.CreateNewModel(modelName);
            
        }
        
        /// <summary>
        /// Test DeleteModel
        /// </summary>
        [Test]
        public void DeleteModelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string modelId = null;
            //instance.DeleteModel(modelId);
            
        }
        
        /// <summary>
        /// Test GetModelsList
        /// </summary>
        [Test]
        public void GetModelsListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetModelsList();
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test IndexByImageUrl
        /// </summary>
        [Test]
        public void IndexByImageUrlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string modelId = null;
            //string imageUrl = null;
            //var response = instance.IndexByImageUrl(modelId, imageUrl);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test IndexImage
        /// </summary>
        [Test]
        public void IndexImageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string modelId = null;
            //System.IO.Stream file = null;
            //var response = instance.IndexImage(modelId, file);
            //Assert.IsInstanceOf(typeof(string), response, "response is string");
        }
        
        /// <summary>
        /// Test TagImageByUrl
        /// </summary>
        [Test]
        public void TagImageByUrlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string modelId = null;
            //string imageUrl = null;
            //instance.TagImageByUrl(modelId, imageUrl);
            
        }
        
        /// <summary>
        /// Test TagLocalImage
        /// </summary>
        [Test]
        public void TagLocalImageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string modelId = null;
            //System.IO.Stream file = null;
            //instance.TagLocalImage(modelId, file);
            
        }
        
        /// <summary>
        /// Test UpdateModel
        /// </summary>
        [Test]
        public void UpdateModelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string modelName = null;
            //string modelId = null;
            //instance.UpdateModel(modelName, modelId);
            
        }
        
    }

}
